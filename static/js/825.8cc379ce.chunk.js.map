{"version":3,"file":"static/js/825.8cc379ce.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/RegisterForm/register-form.module.css?a013","components/RegisterForm/RegisterForm.jsx","webpack://react-homework-template/./src/Pages/RegisterPage/register-page.module.css?08a8","Pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"register-form_wrap__5f3ci\",\"button\":\"register-form_button__b4h65\",\"label\":\"register-form_label__iH7vG\",\"input\":\"register-form_input__U0nyP\"};","import { useState, useId} from \"react\";\n\nimport styles from \"./register-form.module.css\"\n\nconst INITIAL_STATE = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n};\n\nconst RegisterForm = ({onSubmit}) => {\n    const [state, setState] = useState({...INITIAL_STATE});\n\n    const handleChange = ({target}) => {\n        const {name, value, type, checked} = target;\n        const newValue = type === \"checkbox\" ? checked :value;\n        \n        setState({\n            ...state,\n            [name]: newValue,\n        })\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        reset();\n    };\n\n    const reset = () => {\n        setState({...INITIAL_STATE})\n    };\n\n    const nameId = useId();\n    const emailId = useId();   \n    const passwordId = useId();\n\n    const {name, email, password} = state;\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.wrap}> \n            <div className={styles.container}>\n                <label className={styles.label} htmlFor={nameId} >Name:</label>\n                <input className={styles.input} id={nameId} value={name} onChange={handleChange} name=\"name\" required /> \n            </div>\n            <div className={styles.container}>\n                <label className={styles.label} htmlFor={emailId} >Email:</label>\n                <input className={styles.input} id={emailId} value={email} onChange={handleChange} type=\"email\" name=\"email\" required /> \n            </div>\n            <div className={styles.container}>\n                <label className={styles.label} htmlFor={passwordId} >Password:</label>\n                <input className={styles.input} id={passwordId} value={password} onChange={handleChange} type=\"password\" name=\"password\" required /> \n            </div>\n            <button className={styles.button} type=\"submit\">Register</button>\n        </form>\n    )\n}\n\nexport default RegisterForm;","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"register-page_wrap__m+TfS\",\"title\":\"register-page_title__K0Fbi\"};","import { useDispatch, useSelector } from \"react-redux\";\n\nimport RegisterForm from \"components/RegisterForm/RegisterForm\";\n\nimport { signup } from \"../../redux/auth/auth-operations\";\n\nimport { selectAuthError, selectAuthLoading } from \"../../redux/auth/auth-selectors\";\n\nimport styles from \"./register-page.module.css\"\n\nimport Loader from \"components/Loader/Loader\";\n\nconst RegisterPage = () => {\n    const authLoading = useSelector(selectAuthLoading);\n    const authError = useSelector(selectAuthError);\n\n    const dispatch = useDispatch();\n\n    const handleSignup = data => {\n        dispatch(signup(data));\n    }\n\n    return (\n        <main className={styles.wrap}>\n            <h1 className={styles.title}>Sign up</h1>\n            {authLoading && <Loader />}\n            <RegisterForm onSubmit={handleSignup}/>\n            {authError}\n        </main>\n    )\n};\n\nexport default RegisterPage;\n"],"names":["INITIAL_STATE","name","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","value","type","checked","newValue","_defineProperty","reset","nameId","useId","emailId","passwordId","_jsxs","e","preventDefault","className","styles","children","_jsx","htmlFor","id","onChange","required","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","dispatch","useDispatch","Loader","RegisterForm","data","signup"],"sourceRoot":""}